parameters:
  - name: artifactName
    type: string
    default: ""
  - name: downloadPath
    type: string
    default: ''
  - name: downloadRunId
    type: string
    default: ''

# Why use az cli to download? → The ARM agent (32-bit) may run into OutOfMemory issues.  
# Why install Python? → Azure CLI requires Python to run.  
# Why install Azure CLI? → It is not pre-installed on the agent.  
# Why not use AzureCLI@2 task? → It requires azureSubscription, which is unnecessary for downloading artifacts.  
steps:
  - powershell: |
      Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process -Force

      $pythonPath = "C:\Program Files\Python39"

      Write-Host "Downloading Python installer..."
      Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.9.7/python-3.9.7-amd64.exe" -OutFile "python_installer.exe"

      if (!(Test-Path "python_installer.exe")) {
          Write-Host "Python installer download failed!"
          exit 1
      }

      Write-Host "Installing Python..."
      Start-Process -FilePath "python_installer.exe" -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -NoNewWindow -Wait

      Remove-Item -Force "python_installer.exe"

      Start-Sleep -Seconds 5

      $env:Path = "$pythonPath;$pythonPath\Scripts;" + $env:Path

      Write-Host "Python installed successfully!"
      python --version
    displayName: 'Install Python on ARM64 Windows'

  - pwsh: |
      $env:Path = "C:\Program Files\Python39;C:\Program Files\Python39\Scripts;" + $env:Path
      python -m pip install --upgrade pip
      pip install --pre azure-cli
      az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true
      az pipelines runs artifact download --artifact-name ${{parameters.artifactName}} --path "${{parameters.downloadPath}}" --run-id ${{parameters.downloadRunId}} --debug
    displayName: 'Download artifacts with Azure CLI'
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)